services:

  # KEYCLOAK
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.6
    ports:
      - "8080:8080"
    networks:
      - marine-unit-monitoring-network
      - keycloak-network
    hostname: keycloak.pl
    depends_on:
      - keycloak-postgres-db
    command: start-dev --features=declarative-user-profile
    env_file:
      - ./docker-deploy/envs/keycloak.env

  keycloak-postgres-db:
    container_name: keycloak-postgres-db
    image: postgres:latest
    networks:
      - keycloak-network
    volumes:
      - keycloak-postgres-db:/var/lib/postgresql/data
    env_file:
      - ./docker-deploy/envs/keycloak.env

  # EUREKA DISCOVERY
  eureka-discovery:
    container_name: eureka-discovery
    build:
      context: ./eureka-discovery
      dockerfile: Dockerfile
    #    image: eureka-discovery:latest
    ports:
      - "8761:8761"
    networks:
      - marine-unit-monitoring-network
    depends_on:
      - keycloak

  #GATEWAY
  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    #    image: gateway:latest
    ports:
      - "80:80"
      - "5007:5007"
    networks:
      - marine-unit-monitoring-network
    depends_on:
      - api-service
      - dev-service
    env_file:
      - ./docker-deploy/envs/.env
      - ./docker-deploy/envs/gateway.env

  # API SERVICE
  api-service:
    container_name: api-service
    build:
      context: ./api-service
      dockerfile: Dockerfile
    #    image: api-service:latest
    ports:
      - "5005:5005"
    networks:
      - marine-unit-monitoring-network
      - api-service-network
    depends_on:
      - eureka-discovery
      - api-service-mongodb-primary
    env_file:
      - ./docker-deploy/envs/.env
      - ./docker-deploy/envs/api-service.env

  api-service-mongodb-primary:
    container_name: api-service-mongodb-primary
    image: mongo:latest
    expose:
      - "27017"
    networks:
      - api-service-network
    depends_on:
      - api-service-mongodb2
      - api-service-mongodb3
    command:
      - bin/sh
      - -c
      - |
        /db-init/rs-init/mongo-keyfile-init.sh
        mongod --replSet apiServiceDBRS --bind_ip_all
    volumes:
      - ./api-service/db-init:/db-init
      - ./docker-deploy/script/db-init/rs-init:/db-init/rs-init
      - api-service-mongodb-primary-db:/usr/db

  api-service-mongodb2:
    container_name: api-service-mongodb2
    image: mongo:latest
    expose:
      - "27017"
    networks:
      - api-service-network
    command:
      - bin/sh
      - -c
      - |
        /db-init/rs-init/mongo-keyfile-init.sh
        mongod --replSet apiServiceDBRS --bind_ip_all
    volumes:
      - api-service-mongodb2-db:/usr/db

  api-service-mongodb3:
    container_name: api-service-mongodb3
    image: mongo:latest
    expose:
      - "27017"
    networks:
      - api-service-network
    command:
      - bin/sh
      - -c
      - |
        /db-init/rs-init/mongo-keyfile-init.sh
        mongod --replSet apiServiceDBRS --bind_ip_all
    volumes:
      - api-service-mongodb3-db:/usr/db

  # DEV SERVICE
  dev-service:
    container_name: dev-service
    build:
      context: ./dev-service
      dockerfile: Dockerfile
    #    image: dev-service:latest
    ports:
      - "5006:5006"
    networks:
      - marine-unit-monitoring-network
      - dev-service-network
    depends_on:
      - eureka-discovery
      - dev-service-mongodb-primary
    env_file:
      - ./docker-deploy/envs/.env
      - ./docker-deploy/envs/dev-service.env

  dev-service-mongodb-primary:
    container_name: dev-service-mongodb-primary
    image: mongo:latest
    expose:
      - "27017"
    networks:
      - dev-service-network
    command:
      - bin/sh
      - -c
      - |
        /db-init/rs-init/mongo-keyfile-init.sh
        mongod --replSet devServiceDBRS --bind_ip_all
    volumes:
      - ./dev-service/db-init:/db-init
      - ./docker-deploy/script/db-init/rs-init:/db-init/rs-init
      - dev-service-mongodb-primary-db:/usr/db

  # EMAIL SERVICE
  email-service:
    container_name: email-service
    build:
      context: ./email-service
      dockerfile: Dockerfile
    #    image: email-service:latest
    ports:
      - "5008:5008"
    networks:
      - marine-unit-monitoring-network
    depends_on:
      - eureka-discovery
    env_file:
      - ./docker-deploy/envs/.env
      - ./docker-deploy/envs/email-service.env

  # PROTECTION SERVICE
  protection-service:
    container_name: protection-service
    build:
      context: ./protection-service
      dockerfile: Dockerfile
    #    image: protection-service:latest
    ports:
      - "5009:5009"
    networks:
      - marine-unit-monitoring-network
      - protection-service-network
    depends_on:
      - eureka-discovery
      - protection-service-mongodb-primary
    env_file:
      - ./docker-deploy/envs/.env
      - ./docker-deploy/envs/protection-service.env

  protection-service-mongodb-primary:
    container_name: protection-service-mongodb-primary
    image: mongo:latest
    expose:
      - "27017"
    networks:
      - protection-service-network
    command:
      - bin/sh
      - -c
      - |
        /db-init/rs-init/mongo-keyfile-init.sh
        mongod --replSet protectionServiceDBRS --bind_ip_all
    volumes:
      - ./protection-service/db-init:/db-init
      - ./docker-deploy/script/db-init/rs-init:/db-init/rs-init
      - protection-service-mongodb-primary-db:/usr/db

  # REDIS
  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - cache:/usr/cache
    networks:
      - api-service-network
      - dev-service-network

volumes:
  keycloak-postgres-db:
  api-service-mongodb-primary-db:
  api-service-mongodb2-db:
  api-service-mongodb3-db:
  dev-service-mongodb-primary-db:
  protection-service-mongodb-primary-db:
  cache:
networks:
  marine-unit-monitoring-network:
  keycloak-network:
  api-service-network:
  dev-service-network:
  protection-service-network: