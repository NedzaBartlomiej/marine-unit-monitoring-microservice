services:

  # KEYCLOAK
  keycloak: # todo - keycloak admin console not working
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.6
    ports:
      - "8080:8080"
    networks:
      - marine-unit-monitoring-network
      - keycloak-network
    depends_on:
      - keycloak-postgres-db
    command: start
    environment:
      KC_HOSTNAME: keycloak
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_PROXY_HEADERS: forwarded # added - not tested
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres-db/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}

  keycloak-postgres-db:
    container_name: keycloak-postgres-db
    image: postgres:latest
    networks:
      - keycloak-network
    volumes:
      - keycloak-postgres-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  # EUREKA DISCOVERY
  # todo - smth go wrong, cause clients cannot connect to server (server works)
  # -> Not enough variable values available to expand 'eureka.instance.hostname'
  eureka-discovery:
    container_name: eureka-discovery
    build:
      context: ./eureka-discovery
      dockerfile: Dockerfile
    #    image: eureka-discovery:latest
    ports:
      - "8761:8761"
    networks:
      - marine-unit-monitoring-network
    depends_on:
      - keycloak

  #GATEWAY
  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    #    image: gateway:latest
    ports:
      - "80:80"
    networks:
      - marine-unit-monitoring-network
    depends_on:
      - eureka-discovery
      - keycloak
      - api-service
      - admin-service
      - dev-service

  # API SERVICE
  api-service:
    container_name: api-service
    build:
      context: ./api-service
      dockerfile: Dockerfile
    #    image: api-service:latest
    networks:
      - marine-unit-monitoring-network
      - api-service-network
    depends_on:
      - eureka-discovery
      - keycloak
      - api-service-mongodb-primary

  api-service-mongodb-primary:
    container_name: api-service-mongodb-primary
    image: mongo:latest
    expose:
      - "27017"
    networks:
      - api-service-network
    depends_on:
      - api-service-mongodb2
      - api-service-mongodb3
    command:
      - bin/sh
      - -c
      - |
        /db-init/mongo-keyfile-init.sh
        mongod --replSet apiServiceDBRS --bind_ip_all
    volumes:
      - ./docker-deploy/db-init/api-service/:/db-init/
      - api-service-mongodb-primary-db:/usr/db

  api-service-mongodb2:
    container_name: api-service-mongodb2
    image: mongo:latest
    expose:
      - "27017"
    networks:
      - api-service-network
    command:
      - bin/sh
      - -c
      - |
        /db-init/mongo-keyfile-init.sh
        mongod --replSet apiServiceDBRS --bind_ip_all
    volumes:
      - api-service-mongodb2-db:/usr/db

  api-service-mongodb3:
    container_name: api-service-mongodb3
    image: mongo:latest
    expose:
      - "27017"
    networks:
      - api-service-network
    command:
      - bin/sh
      - -c
      - |
        /db-init/mongo-keyfile-init.sh
        mongod --replSet apiServiceDBRS --bind_ip_all
    volumes:
      - api-service-mongodb3-db:/usr/db

  # ADMIN SERVICE
  admin-service:
    container_name: admin-service
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    #    image: admin-service:latest
    networks:
      - marine-unit-monitoring-network
      - admin-service-network
    depends_on:
      - eureka-discovery
      - keycloak
      - admin-service-mongodb

  admin-service-mongodb:
    container_name: admin-service-mongodb
    image: mongo:latest
    networks:
      - admin-service-network
    volumes:
      - admin-service-mongodb-db:/usr/db

  # DEV SERVICE
  dev-service:
    container_name: dev-service
    build:
      context: ./dev-service
      dockerfile: Dockerfile
    #    image: dev-service:latest
    networks:
      - marine-unit-monitoring-network
      - dev-service-network
    depends_on:
      - eureka-discovery
      - keycloak
      - dev-service-mongodb

  dev-service-mongodb:
    container_name: dev-service-mongodb
    image: mongo:latest
    networks:
      - dev-service-network
    volumes:
      - dev-service-mongodb-db:/usr/db

  # REDIS
  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - cache:/usr/cache
    networks:
      - api-service-network

volumes:
  keycloak-postgres-db:
  api-service-mongodb-primary-db:
  api-service-mongodb2-db:
  api-service-mongodb3-db:
  admin-service-mongodb-db:
  dev-service-mongodb-db:
  cache:
networks:
  marine-unit-monitoring-network:
  keycloak-network:
  api-service-network:
  admin-service-network:
  dev-service-network: